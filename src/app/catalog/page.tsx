'use client';

import { useState } from 'react';
import ProtectedRoute from '../components/ProtectedRoute';
import { useAuth } from '../context/AuthContext';
import styles from './catalog.module.css';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
type Book = {
  id: string;
  title: string;
  author: string;
  year: number;
  genre: string;
  available: boolean;
  coverUrl: string;
  description: string;
};

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const mockBooks: Book[] = [
  {
    id: '1',
    title: '–í–æ–π–Ω–∞ –∏ –º–∏—Ä',
    author: '–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π',
    year: 1869,
    genre: '–†–æ–º–∞–Ω',
    available: true,
    coverUrl: '/book-covers/war-and-peace.jpg',
    description: '–†–æ–º–∞–Ω-—ç–ø–æ–ø–µ—è, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å–æ–±—ã—Ç–∏—è –≤–æ–π–Ω—ã 1812 –≥–æ–¥–∞.'
  },
  {
    id: '2',
    title: '–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ',
    author: '–§—ë–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π',
    year: 1866,
    genre: '–†–æ–º–∞–Ω',
    available: true,
    coverUrl: '/book-covers/crime-and-punishment.jpg',
    description: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–æ–º–∞–Ω –æ –º–æ–ª–æ–¥–æ–º —Å—Ç—É–¥–µ–Ω—Ç–µ.'
  },
  // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∫–Ω–∏–≥ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

export default function Catalog() {
  const { user, logout } = useAuth();
  const [books, setBooks] = useState<Book[]>(mockBooks);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedGenre, setSelectedGenre] = useState('all');

  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∂–∞–Ω—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥
  const genres = ['all', ...new Set(books.map(book => book.genre))];

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–Ω–∏–≥
  const filteredBooks = books.filter(book => {
    const matchesSearch = book.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         book.author.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesGenre = selectedGenre === 'all' || book.genre === selectedGenre;
    return matchesSearch && matchesGenre;
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleBooking = (bookId: string) => {
    setBooks(books.map(book => 
      book.id === bookId ? { ...book, available: false } : book
    ));
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    alert('–ö–Ω–∏–≥–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!');
  };

  return (
    <ProtectedRoute>
      <div className={styles.container}>
        <header className={styles.header}>
          <div className={styles.headerContent}>
            <h1>–ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥</h1>
            <div className={styles.userInfo}>
              <span>
                {user?.firstName} {user?.lastName}
              </span>
              <button onClick={logout} className={styles.logoutButton}>
                –í—ã–π—Ç–∏
              </button>
            </div>
          </div>
          <div className={styles.filters}>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className={styles.searchInput}
            />
            <select
              value={selectedGenre}
              onChange={(e) => setSelectedGenre(e.target.value)}
              className={styles.genreSelect}
            >
              {genres.map(genre => (
                <option key={genre} value={genre}>
                  {genre === 'all' ? '–í—Å–µ –∂–∞–Ω—Ä—ã' : genre}
                </option>
              ))}
            </select>
          </div>
        </header>

        <main className={styles.main}>
          <div className={styles.booksGrid}>
            {filteredBooks.map(book => (
              <div key={book.id} className={styles.bookCard}>
                <div className={styles.bookCover}>
                  {/* –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±–ª–æ–∂–∫–∏ –∫–Ω–∏–≥–∏ */}
                  <div className={styles.coverPlaceholder}>üìö</div>
                </div>
                <div className={styles.bookInfo}>
                  <h3 className={styles.bookTitle}>{book.title}</h3>
                  <p className={styles.bookAuthor}>{book.author}</p>
                  <p className={styles.bookDetails}>
                    {book.genre} ‚Ä¢ {book.year} –≥.
                  </p>
                  <p className={styles.bookDescription}>{book.description}</p>
                  <button
                    className={`${styles.bookingButton} ${!book.available ? styles.booked : ''}`}
                    onClick={() => handleBooking(book.id)}
                    disabled={!book.available}
                  >
                    {book.available ? '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å' : '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ'}
                  </button>
                </div>
              </div>
            ))}
          </div>
        </main>

        {filteredBooks.length === 0 && (
          <div className={styles.noResults}>
            <p>–ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          </div>
        )}
      </div>
    </ProtectedRoute>
  );
} 